/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UserContainer,
  UserMeta,
} from '../models/index';
import {
    UserContainerFromJSON,
    UserContainerToJSON,
    UserMetaFromJSON,
    UserMetaToJSON,
} from '../models/index';

export interface UpdateUserRequest {
    userMeta: UserMeta;
}

/**
 * 
 */
export class UserControllerApi extends runtime.BaseAPI {

    /**
     */
    async getUserRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserContainer>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/current-user`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserContainerFromJSON(jsonValue));
    }

    /**
     */
    async getUser(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserContainer> {
        const response = await this.getUserRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async updateUserRaw(requestParameters: UpdateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserMeta>> {
        if (requestParameters['userMeta'] == null) {
            throw new runtime.RequiredError(
                'userMeta',
                'Required parameter "userMeta" was null or undefined when calling updateUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/update-user`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UserMetaToJSON(requestParameters['userMeta']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserMetaFromJSON(jsonValue));
    }

    /**
     */
    async updateUser(requestParameters: UpdateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserMeta> {
        const response = await this.updateUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
