/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserMeta } from './UserMeta';
import {
    UserMetaFromJSON,
    UserMetaFromJSONTyped,
    UserMetaToJSON,
    UserMetaToJSONTyped,
} from './UserMeta';
import type { Authority } from './Authority';
import {
    AuthorityFromJSON,
    AuthorityFromJSONTyped,
    AuthorityToJSON,
    AuthorityToJSONTyped,
} from './Authority';

/**
 * 
 * @export
 * @interface UserPrincipal
 */
export interface UserPrincipal {
    /**
     * 
     * @type {number}
     * @memberof UserPrincipal
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UserPrincipal
     */
    username?: string;
    /**
     * 
     * @type {UserMeta}
     * @memberof UserPrincipal
     */
    userMeta?: UserMeta;
    /**
     * 
     * @type {Array<Authority>}
     * @memberof UserPrincipal
     */
    authorities?: Array<Authority>;
    /**
     * 
     * @type {boolean}
     * @memberof UserPrincipal
     */
    accountNonExpired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserPrincipal
     */
    accountNonLocked?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserPrincipal
     */
    credentialsNonExpired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserPrincipal
     */
    enabled?: boolean;
}

/**
 * Check if a given object implements the UserPrincipal interface.
 */
export function instanceOfUserPrincipal(value: object): value is UserPrincipal {
    return true;
}

export function UserPrincipalFromJSON(json: any): UserPrincipal {
    return UserPrincipalFromJSONTyped(json, false);
}

export function UserPrincipalFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPrincipal {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'username': json['username'] == null ? undefined : json['username'],
        'userMeta': json['userMeta'] == null ? undefined : UserMetaFromJSON(json['userMeta']),
        'authorities': json['authorities'] == null ? undefined : ((json['authorities'] as Array<any>).map(AuthorityFromJSON)),
        'accountNonExpired': json['accountNonExpired'] == null ? undefined : json['accountNonExpired'],
        'accountNonLocked': json['accountNonLocked'] == null ? undefined : json['accountNonLocked'],
        'credentialsNonExpired': json['credentialsNonExpired'] == null ? undefined : json['credentialsNonExpired'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
    };
}

export function UserPrincipalToJSON(json: any): UserPrincipal {
    return UserPrincipalToJSONTyped(json, false);
}

export function UserPrincipalToJSONTyped(value?: UserPrincipal | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'username': value['username'],
        'userMeta': UserMetaToJSON(value['userMeta']),
        'authorities': value['authorities'] == null ? undefined : ((value['authorities'] as Array<any>).map(AuthorityToJSON)),
        'accountNonExpired': value['accountNonExpired'],
        'accountNonLocked': value['accountNonLocked'],
        'credentialsNonExpired': value['credentialsNonExpired'],
        'enabled': value['enabled'],
    };
}

