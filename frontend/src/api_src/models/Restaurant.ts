/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserMetaBase } from './UserMetaBase';
import {
    UserMetaBaseFromJSON,
    UserMetaBaseFromJSONTyped,
    UserMetaBaseToJSON,
    UserMetaBaseToJSONTyped,
} from './UserMetaBase';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';
import type { Menu } from './Menu';
import {
    MenuFromJSON,
    MenuFromJSONTyped,
    MenuToJSON,
    MenuToJSONTyped,
} from './Menu';

/**
 * 
 * @export
 * @interface Restaurant
 */
export interface Restaurant extends UserMetaBase {
    /**
     * 
     * @type {Address}
     * @memberof Restaurant
     */
    address?: Address;
    /**
     * 
     * @type {string}
     * @memberof Restaurant
     */
    description?: string;
    /**
     * 
     * @type {Menu}
     * @memberof Restaurant
     */
    menu?: Menu;
}

/**
 * Check if a given object implements the Restaurant interface.
 */
export function instanceOfRestaurant(value: object): value is Restaurant {
    return true;
}

export function RestaurantFromJSON(json: any): Restaurant {
    return RestaurantFromJSONTyped(json, false);
}

export function RestaurantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Restaurant {
    if (json == null) {
        return json;
    }
    return {
        ...UserMetaBaseFromJSONTyped(json, true),
        'address': json['address'] == null ? undefined : AddressFromJSON(json['address']),
        'description': json['description'] == null ? undefined : json['description'],
        'menu': json['menu'] == null ? undefined : MenuFromJSON(json['menu']),
    };
}

export function RestaurantToJSON(json: any): Restaurant {
    return RestaurantToJSONTyped(json, false);
}

export function RestaurantToJSONTyped(value?: Restaurant | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...UserMetaBaseToJSONTyped(value, true),
        'address': AddressToJSON(value['address']),
        'description': value['description'],
        'menu': MenuToJSON(value['menu']),
    };
}

