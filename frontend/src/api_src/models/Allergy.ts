/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Allergen } from './Allergen';
import {
    AllergenFromJSON,
    AllergenFromJSONTyped,
    AllergenToJSON,
    AllergenToJSONTyped,
} from './Allergen';

/**
 * 
 * @export
 * @interface Allergy
 */
export interface Allergy {
    /**
     * 
     * @type {number}
     * @memberof Allergy
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Allergy
     */
    name?: string;
    /**
     * 
     * @type {Array<Allergen>}
     * @memberof Allergy
     */
    allergens?: Array<Allergen>;
}

/**
 * Check if a given object implements the Allergy interface.
 */
export function instanceOfAllergy(value: object): value is Allergy {
    return true;
}

export function AllergyFromJSON(json: any): Allergy {
    return AllergyFromJSONTyped(json, false);
}

export function AllergyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Allergy {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'allergens': json['allergens'] == null ? undefined : ((json['allergens'] as Array<any>).map(AllergenFromJSON)),
    };
}

export function AllergyToJSON(json: any): Allergy {
    return AllergyToJSONTyped(json, false);
}

export function AllergyToJSONTyped(value?: Allergy | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'allergens': value['allergens'] == null ? undefined : ((value['allergens'] as Array<any>).map(AllergenToJSON)),
    };
}

